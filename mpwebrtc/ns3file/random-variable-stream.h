#ifndef RANDOM_VARIABLE_STREAM_H
#define RANDOM_VARIABLE_STREAM_H
#include<stdint.h>
namespace ns3 {
class RngStream;
class RandomVariableStream{
public:
  /**
   * \brief Default constructor.
   */
  RandomVariableStream ();
  /**
   * \brief Destructor.
   */
  virtual ~RandomVariableStream();
  void SetStream (int64_t stream); 
  int64_t GetStream(void) const;
  void SetAntithetic(bool isAntithetic);
  bool IsAntithetic(void) const;
  virtual double GetValue (void) = 0;
  virtual uint32_t GetInteger (void) = 0;
protected:
  /**
   * \brief Get the pointer to the underlying RngStream.
   * \return The underlying RngStream
   */
  RngStream *Peek(void) const;
private:
  /** Pointer to the underlying RngStream. */
  RngStream *m_rng;

  /** Indicates if antithetic values should be generated by this RNG stream. */
  bool m_isAntithetic;

  /** The stream number for the RngStream. */
  int64_t m_stream;  
};
class UniformRandomVariable : public RandomVariableStream
{
public:
 UniformRandomVariable ();
  /**
   * \brief Get the lower bound on randoms returned by GetValue(void).
   * \return The lower bound on values from GetValue(void).
   */
  double GetMin (void) const;

  /**
   * \brief Get the upper bound on values returned by GetValue(void).
   * \return The upper bound on values from GetValue(void).
   */
  double GetMax (void) const;

  /**
   * \brief Get the next random value, as a double in the specified range
   * \f$[min, max)\f$.
   *
   * \note The upper limit is excluded from the output range.
   *
   * \param [in] min Low end of the range (included).
   * \param [in] max High end of the range (excluded).
   * \return A floating point random value.
   */
  double GetValue (double min, double max);

  /**
   * \brief Get the next random value, as an unsigned integer in the
   * specified range \f$[min, max]/f$.
   *
   * \note The upper limit is included in the output range.
   *
   * \param [in] min Low end of the range.
   * \param [in] max High end of the range.
   * \return A random unsigned integer value.
   */
  uint32_t GetInteger (uint32_t min, uint32_t max);

  // Inherited from RandomVariableStream
  /**
   * \brief Get the next random value as a double drawn from the distribution.
   * \return A floating point random value.
   * \note The upper limit is excluded from the output range.
  */
  virtual double GetValue (void);
  /**
   * \brief Get the next random value as an integer drawn from the distribution.
   * \return  An integer random value.
   * \note The upper limit is included in the output range.
   */
  virtual uint32_t GetInteger (void);
  
private:
  /** The lower bound on values that can be returned by this RNG stream. */
  double m_min{0};

  /** The upper bound on values that can be returned by this RNG stream. */
  double m_max{1.0}; 
};	
}
#endif
